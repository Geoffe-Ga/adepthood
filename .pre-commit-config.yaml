repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-ast
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ["--maxkb=250"]
        exclude: |
          ^app/package-lock\.json$

  # Python format / lint / type-check
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        files: ^backend/
        args: ["--config=backend/pyproject.toml"]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        files: ^backend/
        args: ["--config=backend/pyproject.toml", "--fix"]
      - id: ruff-format
        files: ^backend/

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        files: ^backend/
        args: ["--config-file=backend/pyproject.toml"]
        additional_dependencies: ["types-requests", "pydantic", "sqlmodel", "fastapi", "starlette"]

  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        files: ^backend/
        args: ["--settings-path=backend/pyproject.toml"]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        files: ^backend/
        args: ["-c", "backend/.bandit", "-r", "backend"]

  - repo: https://github.com/trailofbits/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        name: pip-audit (backend dependencies)
        files: ^backend/
        args: ["-r", "backend/requirements.txt", "--ignore-vuln", "PYSEC-0000"]
        # If you use Poetry/uv instead of requirements.txt, adjust accordingly.

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]

  # App (React Native) checks using local hooks (requires Node in the environment)
  - repo: local
    hooks:
      - id: app-eslint
        name: app eslint
        language: system
        entry: bash -lc 'cd app && npm run lint'
        pass_filenames: false
        files: ^app/
        exclude: ^app/(?:node_modules|dist|build|coverage)/

      - id: app-prettier
        name: app prettier (write)
        entry: bash -lc 'cd app && npx prettier --write .'
        language: system
        files: ^app/.*\.(js|jsx|ts|tsx|json|css|md|ya?ml)$
        exclude: ^app/(?:node_modules|dist|build|coverage)/|^app/(?:tsconfig\.json|package-lock\.json)$

      - id: app-typecheck
        name: app typecheck
        entry: bash -lc 'cd app && npx tsc -p tsconfig.json --noEmit'
        language: system
        pass_filenames: false
        files: ^app/.*\.(ts|tsx)$
        exclude: ^app/(?:node_modules|dist|build|coverage)/

      - id: app-tests
        name: app tests
        entry: bash -lc 'cd app && npx jest --passWithNoTests'
        language: system
        pass_filenames: false
        files: ^app/
        exclude: ^app/(?:node_modules|dist|build|coverage)/

      - id: backend-tests-coverage
        name: backend tests (coverage required)
        language: system
        entry: bash -lc 'if [ -f .venv/bin/activate ]; then source .venv/bin/activate; fi; cd backend && pytest'
        pass_filenames: false
        files: ^backend/
        stages: [pre-commit, pre-push]

      - id: commitlint
        name: commitlint (conventional commits)
        language: system
        entry: bash -lc 'npx commitlint --cwd app --extends @commitlint/config-conventional --edit "$1"'
        stages: [commit-msg]
        # IMPORTANT: commit-msg hooks receive the commit message path as $1
        # so do NOT set pass_filenames: false here.
